<?xml version="1.0" encoding="utf-8" ?> 
<CodeSnippets xmlns="http://schemas.microsoft.com/VisualStudio/CodeSnippet">
    <CodeSnippet Format="1.0.0">

        <!-- The header contains information describing the snippet. -->
        <Header>
          
          <!-- The Title of the snippet, this will be shown in the snippets manager. -->
          <Title>Insert Observable Collection Property</Title>
          
          <!-- The description of the snippet. -->
          <Description>Inserts an Observable Collection.</Description>
          
          <!-- The author of the snippet. -->
          <Author>Dave Kerr</Author>
          
          <!-- The set of characters that must be keyed in to insert the snippet. -->
          <Shortcut>apexoc</Shortcut>
          
          <!-- A URL for more help. -->
          <HelpUrl>http://apex.codeplex.com</HelpUrl>
          
          <!-- The set of snippet types we're dealing with - either Expansion or -->
          <SnippetTypes>
            <SnippetType>Expansion</SnippetType>
          </SnippetTypes>          
          
        </Header>
      
        <!-- Now we have the snippet itself. -->
        <Snippet>
          
            <!-- Create any declarations that we use in the snippet. -->
            <Declarations>
              <Literal>
                <ID>PropertyName</ID>
                <ToolTip>Enter the property name</ToolTip>
                <Default>PropertyName</Default>
              </Literal>
              <Literal>
                <ID>PropertyType</ID>
                <ToolTip>Enter the property name</ToolTip>
                <Default>PropertyType</Default>
              </Literal>
            </Declarations>
          
            <!-- Now sepecify the code language and the actual snippet content. -->
            <Code Language="CSharp" Kind="any">
                <![CDATA[
                    
                    /// <summary>
                    /// The NotifyingProperty for the $PropertyName$ property.
                    /// </summary>
                    private NotifyingProperty $PropertyName$Property = 
                      new NotifyingProperty("$PropertyName$", typeof($PropertyType$), default($PropertyType$));
                    
                    /// <summary>
                    /// Gets or sets $PropertyName$.
                    /// </summary>
                    /// <value>The value of $PropertyName$.</value>
                    public $PropertyType$ $PropertyName$
                    {
                      get { return ($PropertyType$)GetValue($PropertyName$Property); }
                      set { SetValue($PropertyName$Property, value); }
                    }]]>
            </Code>
        </Snippet>
    </CodeSnippet>
</CodeSnippets>