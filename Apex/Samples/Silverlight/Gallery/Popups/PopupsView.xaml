<UserControl x:Class="Gallery.Popups.PopupsView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:apexControls="clr-namespace:Apex.Controls;assembly=Apex.Silverlight" mc:Ignorable="d" 
             d:DesignHeight="300" d:DesignWidth="300">
    <Grid>
        <apexControls:ApexGrid Rows="Auto,Auto,*,Auto">

            <TextBlock Grid.Row="0" Grid.Column="0" FontFamily="Segoe UI" FontSize="16">
                 You can use the Apex Application Host to show popups in your application. Add an 'ApplicationHost' control as
                    a top level item in your application. Once this has been done, you can call:
                    object result = ApexBroker.GetApplicationHost().ShowPopup(somePopup);
                    To get the application host and use it to show a popup. Popups run in their own dispatcher frame - this means that
                    the function above won't return until the popup is closed.
            </TextBlock>

            <TextBlock Grid.Row="1">Popup Animation Helper: <Hyperlink Command="{Binding UseFadeInOutAnimationHelperCommand}">Fade In Out</Hyperlink>,
            <Hyperlink Command="{Binding UseBounceUpDownAnimationHelperCommand}">Bounce Up Down</Hyperlink>, 
            <Hyperlink Command="{Binding UseDiagonalSlideInOuAnimationHelperCommand}">Diagonal Slide In/Out</Hyperlink></TextBlock>
            <Button Grid.Row="2" Width="120" Height="30" Content="Show Popup" Click="Button_Click" />
        </apexControls:ApexGrid>
    </Grid>
</UserControl>
